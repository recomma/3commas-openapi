openapi: 3.0.3
info:
  title: 3Commas API (DCA Bot)
  version: '1.0.0'
  description: |
    Endpoints to create and manage DCA Bots on 3Commas.
servers:
  - url: https://api.3commas.io
tags:
  - name: DCA Bot
    description: Manage Dollar Cost Averaging bots and their deals.

paths:
  /ver1/bots/create_bot:
    post:
      tags:
        - DCA Bot
      summary: Create a new DCA Bot
      description: Creates a new DCA Bot
      operationId: createDcaBot
      requestBody:
        description: Bot configuration payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBotRequest'
      responses:
        '200':
          description: Created Bot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        "400":
          description: Bad Request – Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /ver1/bots/update_pairs_black_list:
    post:
      tags:
        - DCA Bot
      summary: Update the pairs blacklist
      description: Adds specified pair(s) to the blacklist, preventing all DCA bots from opening deals with these pairs.
      operationId: updatePairsBlacklist
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      parameters:
        - name: pairs
          in: query
          description: Trading pair(s) in 3Commas format. Use the endpoint All Market Pairs to get valid values.
          required: true
          schema:
            type: string
          example: "1INCH_1INCH-USD-SWAP"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  pairs:
                    type: array
                    items:
                      type: string
                required:
                  - pairs
              example:
                pairs:
                  - "1INCH_1INCH-USD-SWAP"

  /ver1/bots/pairs_black_list:
    get:
      tags:
        - DCA Bot
      summary: Get pairs blacklist
      description: Returns the list of blacklist pair(s) that restricts all DCA bots from opening deals with these pairs.
      operationId: getPairsBlacklist
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pairs:
                    type: array
                    items:
                      type: string
                required:
                  - pairs
              example:
                pairs:
                  - "BTC_SUI"
                  - "BTC_RONIN"
                  - "1INCH_1INCH-USD-SWAP"

  /ver1/bots/strategy_list:
    get:
      summary: Available strategy list
      description: Returns available strategy list for DCA Bot. Use the query parameters to page through results.
      operationId: listStrategies
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      tags:
        - DCA Bot
      parameters:
        - name: account_id
          in: query
          description: Unique 3Commas ID of the exchange account entity. Use the List of connected exchanges and wallets endpoint to retrieve the value for the account_id parameter.
          schema:
            type: integer
        - name: type
          in: query
          description: Specifies the strategy direction for the bot.
          schema:
            type: string
            enum:
              - long
              - short
        - name: strategy
          in: query
          description: Specifies the type of strategy list.
          schema:
            type: string
            enum:
              - simple
              - composite
      responses:
        '200':
          description: Available strategy list for DCA Bot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyList'

  /ver1/bots:
    get:
      tags:
        - DCA Bot
      summary: Get the list of DCA Bots
      description: |
        Returns a list of DCA Bots by user. Use the query parameters to filter the results.
      operationId: listBots
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      parameters:
        - name: account_id
          in: query
          description: Filters entities linked to the specified 3Commas exchange account.
          schema:
            type: integer
        - name: strategy
          in: query
          description: Filters bots by trading strategy type.
          schema:
            type: string
            enum: [long, short]
        - name: order_direction
          in: query
          description: Sets the direction of ordering.
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
        - name: limit
          in: query
          description: Limits the number of records returned (max 100).
          schema:
            type: integer
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Skips the first N records in the results.
          schema:
            type: integer
            minimum: 0
        - name: from
          in: query
          description: Returns entities created after a specific timestamp (ms since epoch).
          schema:
            type: integer
        - name: scope
          in: query
          description: Filters bots by their status.
          schema:
            type: string
        - name: sort_by
          in: query
          description: Specifies the field used to order the results.
          schema:
            type: string
            enum: [created_at, updated_at, profit]
            default: created_at
        - name: quote
          in: query
          description: Filters by quote currency.
          schema:
            type: string
      responses:
        '200':
          description: Array of DCA Bot entities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bot'

  /ver1/bots/stats:
    get:
      tags:
        - DCA Bot
      summary: Get aggregate stats for all bots
      description: Returns profit and locked amount data on deals for all DCA Bots or an existing bot or an existing exchange account using their ID.
      operationId: getBotsStats
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      parameters:
        - name: account_id
          in: query
          description: Filters entities linked to the specified 3Commas exchange account.
          schema:
            type: integer
        - name: bot_id
          in: query
          description: Filters entities linked to the specified DCA Bot.
          schema:
            type: integer
      responses:
        '200':
          description: Stats object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotsStats'
              example:
                overall_stats:
                  USDT: "-47.47740906"
                today_stats:
                  USDT: "10.98885705"
                profits_in_usd:
                  overall_usd_profit: -47.48
                  today_usd_profit: 10.99
                  active_deals_usd_profit: 1.366505088
                  funds_locked_in_active_deals: 300.843218676

  /ver1/bots/stats_by_date:
    get:
      tags:
        - DCA Bot
      summary: Get bots stats grouped by date
      operationId: getBotsStatsByDate
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Time-series stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotsStatsByDate'  # WIP

  /ver1/bots/{bot_id}/disable:
    post:
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      tags:
        - DCA Bot
      summary: Disable a specific bot
      operationId: disableBot
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Bot disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: 'Forbidden'

  /ver1/bots/{bot_id}/enable:
    post:
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      tags:
        - DCA Bot
      summary: Enable a specific bot
      operationId: enableBot
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bot enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'

  /ver1/bots/{bot_id}/copy_and_create:
    post:
      tags:
        - DCA Bot
      summary: Copy DCA Bot
      description: Copies the bot from or to another linked exchange account connected to 3Commas.
      operationId: copyAndCreateBot
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      parameters:
        - name: bot_id
          in: path
          description: Unique 3Commas ID for this DCA Bot entity you want to copy.
          required: true
          schema:
            type: integer
      requestBody:
        description: Payload for copying an existing DCA Bot
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyBotRequest'
      responses:
        '201':
          description: Created Bot copy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyBotResponse'
        '400':
          description: Bad Request – Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized – Invalid signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ver1/bots/{bot_id}/delete:
    post:
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      tags:
        - DCA Bot
      summary: Delete DCA Bot
      description: Deletes an existing DCA Bot using its ID.
      operationId: deleteBot
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ver1/bots/{bot_id}/panic_sell_all_deals:
    post:
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      tags:
        - DCA Bot
      summary: Close DCA Bot at market price
      description: Closes all deals of the bot at market price and disables the DCA Bot.
      operationId: panicSellAllDeals
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Created Bot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ver1/bots/{bot_id}/cancel_all_deals:
    post:
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      tags:
        - DCA Bot
      summary: Cancel DCA Bot
      description: Cancels an existing DCA Bot and all active deals using the bot's ID.
      operationId: cancelAllDeals
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'

  /ver1/bots/{bot_id}/update:
    patch:
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_WRITE
      tags:
        - DCA Bot
      summary: Edit DCA Bot
      description: Edits an existing DCA Bot by its ID.
      operationId: updateBot
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBotRequest'
      responses:
        '200':
          description: Updated bot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /ver1/bots/{bot_id}/show:
    get:
      tags:
        - DCA Bot
      summary: Shows information about a specific DCA Bot using its ID.
      operationId: getBot
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      parameters:
        - name: bot_id
          in: path
          required: true
          description: Unique 3Commas ID for this DCA Bot entity.
          schema:
            type: integer
        - name: include_events
          in: query
          required: true
          description: Indicates whether to include information about events related to the entity.
          schema:
            type: boolean
      responses:
        '200':
          description: Bot details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /ver1/bots/{bot_id}/profit_by_day:
    get:
      summary: Get DCA Bot profit data
      description: Returns daily profit data for a specified DCA Bot, grouped by date and identified by its unique ID.
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      tags:
        - DCA Bot
      operationId: getProfitByDay
      parameters:
        - name: bot_id
          in: path
          description: Unique 3Commas ID for this DCA Bot entity.
          required: true
          schema:
            type: integer
        - name: days
          in: query
          description: Specifies the number of days for which profit data is requested for this bot.
          schema:
            type: integer
            default: 30
      responses:
        '201':
          description: Profit time series
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfitByDay'
              example:
                - s_date: "2024-10-28"
                  unix_timestamp: 1730073600
                  profit:
                    btc: "0.00002960"
                    usd: "2.05"
                - s_date: "2024-10-29"
                  unix_timestamp: 1730160000
                  profit:
                    btc: "0.00001436"
                    usd: "1.02"
                - s_date: "2024-10-30"
                  unix_timestamp: 1730246400
                  profit:
                    btc: "0.00001456"
                    usd: "1.06"
                - s_date: "2024-11-06"
                  unix_timestamp: 1730851200
                  profit:
                    btc: "0.00002720"
                    usd: "2.05"
                - s_date: "2024-11-07"
                  unix_timestamp: 1730937600
                  profit:
                    btc: "0.00002823"
                    usd: "2.13"

  /ver1/bots/{bot_id}/deals_stats:
    get:
      summary: DCA Bot deals stats
      description: Returns data on active and created deals, as well as profit data for the entire period for the DCA Bot.
      operationId: getDealsStats
      tags:
        - DCA Bot
      security:
        - SIGNED: []
      x-permissions:
        - BOTS_READ
      parameters:
        - name: bot_id
          in: path
          required: true
          schema:
            type: integer
          description: Unique 3Commas ID for this DCA Bot entity.
      responses:
        '200':
          description: Deals stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealsStats'

  /ver1/accounts/market_pairs:
    get:
      tags:
        - Accounts
      summary: Get all market pairs
      description: The method allows getting the list of pairs supported by the exchange in 3Commas format.
      operationId: getMarketPairs
      security: []
      parameters:
        - name: market_code
          in: query
          description: Unique exchange code in the 3Commas system. Use the “Supported markets list” endpoint to get valid values.
          required: true
          schema:
            type: string
          example: "binance_us"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - "BTC_ETH"
                - "BTC_LTC"
                - "BTC_BNB"
                - "BTC_NEO"
                - "ETH_QTUM"
                - "ETH_EOS"
                - "ETH_SNT"
                - "ETH_BNT"
                - "BTC_GAS"
                - "ETH_BNB"
                - "USDT_BTC"

components:
  schemas:
    Bot:
      type: object
      properties:
        id:
          type: integer
          description: "Unique 3Commas ID for this DCA Bot entity."
        account_id:
          type: integer
          description: "Unique 3Commas ID for this exchange account entity."
        is_enabled:
          type: boolean
          description: "Indicates whether DCA Bot is currently enabled true or not false."
        pairs:
          type: array
          items:
            type: string
          description: "Trading pair(s) in 3Commas format."
        strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
          description: "An array of strategies used for opening deals in this DCA Bot."
        close_strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
          description: "An array of strategies used for closing deals in this DCA Bot."
        safety_strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
          description: "Array of strategies specifically for the execution of your safety orders in this DCA Bot."
        max_active_deals:
          type: integer
          description: "The maximum number of active deals available for this DCA Bot."
          default: 1
        active_deals_count:
          type: integer
          description: "The current number of active deals managed by this bot."
        deletable?:
          type: boolean
          description: "Indicates whether this DCA Bot can be deleted true or not false."
        created_at:
          type: string
          format: date-time
          description: "ISO 8601 datetime string of when this DCA Bot entity was created."
        updated_at:
          type: string
          format: date-time
          description: "ISO 8601 datetime string of when this DCA Bot entity was update last time."
        trailing_enabled:
          type: boolean
          nullable: true
          description: "Indicates whether trailing is enabled for Take Profit of this bot true or not false."
        trailing_deviation:
          type: number
          description: "Percentage value of the trailing price, in percent."
        tsl_enabled:
          type: boolean
          description: "Indicates whether trailing is enabled for Stop Loss true or not false for this DCA Bot."
        deal_start_delay_seconds:
          type: integer
          nullable: true
          description: "Delay in seconds before a next deal starts."
        stop_loss_timeout_enabled:
          type: boolean
          description: "Indicates if the Stop Loss timeout is active true or not false."
        stop_loss_timeout_in_seconds:
          type: integer
          description: "Duration of the Stop Loss timeout in seconds."
        disable_after_deals_count:
          type: integer
          description: "The number of deals after that the bot will be switched to disabled (is_enabled: false)"
        deals_counter:
          type: integer
          description: "Tracks the number of deals executed by the bot for disable_after_deals_count."
        allowed_deals_on_same_pair:
          type: integer
          nullable: true
          description: "Number of active deals allowed with the same trading pair simultaneously. It worls only for bot where type is Bot::MultiBot."
        close_deals_timeout:
          type: integer
          nullable: true
          description: "The time in seconds after which the deals will close automatically."
        url_secret:
          type: string
          description: "Unique code this DCA Bot using for copying this bot."
        take_profit_type:
          type: string
          description: "Type of take profit calculation: base, total."
        take_profit:
          type: number
          description: "Percentage value for the bot’s Take Profit."
        take_profit_steps:
          type: array
          items:
            $ref: '#/components/schemas/TakeProfitStep'
          description: "Details of the Take Profit and its steps applied to this DCA Bot."
        name:
          type: string
          description: "Name assigned to the bot."
        base_order_volume_type:
          type: string
          description: "Volume type for base orders: quote_currency, base_currency, percent."
        base_order_volume:
          type: number
          description: "The volume of the base order for this DCA Bot."
        safety_order_volume_type:
          type: string
          description: "The volume type for the Safety Order in this DCA Bot."
        safety_order_volume:
          type: string
          description: "The volume of the Safety Order for this DCA Bot."
        safety_order_step_percentage:
          type: number
          description: "Price deviation in percentage to open Safety Orders."
        max_safety_orders:
          type: integer
          description: "Maximum number of Safety Orders allowed for per deal."
        active_safety_orders_count:
          type: integer
          description: "The number of active Safety Orders the DCA Bot is allowed to place at one time."
        min_profit_type:
          type: string
          nullable: true
          description: "The type of minimum profit used as the basis for profit calculation in this DCA Bot, applicable to the close strategy of Take Profit."
        min_profit_percentage:
          type: string
          nullable: true
          description: "The minimum profit percentage which need to reach for this DCA Bot to complete a deal, applicable to the close strategy of Take Profit."
        type:
          type: string
          description: "The type of DCA Bot, based on the number of pairs. If a single pair is passed, a Bot::SingleBot is created. If two or more pairs are passed, a Bot::MultiBot is created."
        martingale_volume_coefficient:
          type: number
          description: "Coefficient for increasing safety order volume in Martingale strategy."
        martingale_step_coefficient:
          type: number
          description: "Coefficient for increasing safety order price safety_order_step_percentage in Martingale strategy."
        stop_loss_type:
          type: string
          description: "Specifies the type of action the bot performs when Stop Loss is triggered after closing a deal."
        stop_loss_percentage:
          type: number
          description: "Stop loss percentage for this bot."
        cooldown:
          type: number
          description: "The waiting time between closing a deal and accepting a signal to create a new deal for the same asset pair (sec.)."
        strategy:
          type: string
          description: "Type of strategy used by the bot: long, short."
        min_volume_btc_24h:
          type: number
          description: "The minimum trading volume in BTC over the last 24 hours required to open a deal."
        profit_currency:
          type: string
          description: "Currency used for the profit from the trades executed by this bot."
        min_price:
          type: string
          nullable: true
          description: "Minimum price at which the new deal will open for thi DCA Bot."
        max_price:
          type: string
          nullable: true
          description: "Maximum price at which the new deal will open for thi DCA Bot."
        account_name:
          type: string
          description: "The name for the exchange account set by the user."
        finished_deals_profit_usd:
          type: string
          description: "Total profit in USD from all deals completed by this DCA Bot."
        finished_deals_count:
          type: string
          description: "Total number of deals finished by DCA Bot."
        leverage_type:
          type: string
          description: "Type of leverage applied for this DCA Bot."
        leverage_custom_value:
          type: string
          nullable: true
          description: "The leverage value set by the user."
        start_order_type:
          type: string
          description: "Type of order to start deals with: limit, market."
        active_deals_usd_profit:
          type: string
          description: "Total USD profit from active deals."
        risk_reduction_percentage:
          type: number
          description: "Percentage of losses reduction applied for this DCA Bot."
        reinvesting_percentage:
          type: number
          description: "The percentage of realized profit to be reinvested into each new deal."
        reinvested_volume_usd:
          type: number
          nullable: true
          description: "USD volume reinvested from profit."
        min_price_percentage:
          type: string
          nullable: true
          description: "Minimum price percentage for bot activation (only for Multy bot)."
        max_price_percentage:
          type: string
          nullable: true
          description: "Max price percent (only for Multy bot)."
        active_deals:
          type: array
          items:
            $ref: '#/components/schemas/Deal'
          description: "List of active deals managed by this DCA Bot."

    StrategyConfig:
      type: object
      description: Configuration object for an individual strategy in strategy_list, close_strategy_list, or safety_strategy_list.
      properties:
        strategy:
          type: string
          description: |
            Identifier of the strategy, e.g.  
            - "manual"  
            - "nonstop"  
            - "trading_view"  
            - "rsi"
        options:
          type: object
          description: Strategy-specific parameters (keys depend on the chosen strategy; see examples below).
          additionalProperties: true
      example:
        - strategy: "manual"
          options: {}
        - strategy: "nonstop"
          options: {}
        - strategy: "trading_view"
          options:
            time: "5m"
            type: "buy_or_strong_buy"
        - strategy: "rsi"
          options:
            time: "5m"
            points: 30
            trigger_condition: "less"
            time_period: 7

    TakeProfitStep:
      type: object
      properties:
        id:
          type: integer
          description: "Step number of Take Profit."
        amount_percentage:
          type: string
          description: "The percentage of the base order volume to be allocated for this Take Profit step."
        profit_percentage:
          type: string
          description: "The specific profit percentage applied to the volume of units for this Take Profit step."

    Deal:
      type: object
      # Define deal fields as needed

    StrategyList:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StrategyDefinition'
    StrategyDefinition:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name of the strategy.
        strategy_type:
          type: string
          description: Type of strategy (e.g., signal, indicator).
        payed:
          type: boolean
          description: Indicates if the strategy requires payment.
        beta:
          type: boolean
          description: Indicates if the strategy is in beta.
        options:
          type: object
          nullable: true
          description: Strategy-specific parameters.
          additionalProperties: true
        accounts_whitelist:
          type: array
          items:
            type: string
          nullable: true
          description: List of account types supported by this strategy.
      required:
        - name
        - strategy_type
        - payed
        - beta
    BotsStats:
      type: object
      properties:
        overall_stats:
          type: object
          description: Cumulative profit or loss by currency for all trading activity.
          additionalProperties:
            type: string
        today_stats:
          type: object
          description: Today's profit or loss by currency.
          additionalProperties:
            type: string
        profits_in_usd:
          type: object
          description: Detailed profit and loss data in USD.
          properties:
            overall_usd_profit:
              type: number
              description: Cumulative USD profit or loss from all trading activity.
            today_usd_profit:
              type: number
              description: USD profit or loss accumulated for the current day.
            active_deals_usd_profit:
              type: number
              description: USD profit or loss from active (unclosed) deals.
            funds_locked_in_active_deals:
              type: number
              description: Funds locked in active deals, in USD.
          required:
            - overall_usd_profit
            - today_usd_profit
            - active_deals_usd_profit
            - funds_locked_in_active_deals
      example:
        overall_stats:
          USDT: "-47.47740906"
        today_stats:
          USDT: "10.98885705"
        profits_in_usd:
          overall_usd_profit: -47.48
          today_usd_profit: 10.99
          active_deals_usd_profit: 1.366505088
          funds_locked_in_active_deals: 300.843218676
    BotsStatsByDate:
      type: array
      items:
        type: object
        properties:
          date:
            type: string
            format: date
          stats:
            $ref: '#/components/schemas/BotsStats'
    ProfitByDay:
      type: array
      items:
        type: object
        properties:
          s_date:
            type: string
            format: date
          unix_timestamp:
            type: integer
          profit:
            type: object
            properties:
              btc:
                type: string
              usd:
                type: string
        required:
          - s_date
          - unix_timestamp
          - profit

    DealsStats:
      type: object
      properties:
        active:
          type: integer
          description: The number of currently active deals.
        completed:
          type: integer
          description: The total number of completed deals.
        panic_sold:
          type: integer
          description: The number of deals closed at market price.
        from_currency_is_dollars:
          type: boolean
          description: Shows whether the base currency for profit calculation is USD.
        completed_deals_usd_profit:
          type: string
          description: The total profit from completed deals in USD.
        completed_deals_btc_profit:
          type: string
          description: The total profit from completed deals in BTC.
        funds_locked_in_active_deals:
          type: string
          description: The total funds currently locked in active deals, in USD.
        btc_funds_locked_in_active_deals:
          type: string
          description: The total funds currently locked in active deals, in BTC.
        active_deals_usd_profit:
          type: string
          description: The current profit or loss from active deals in USD.
        active_deals_btc_profit:
          type: string
          description: The current profit or loss from active deals in BTC.

    UpdateBotRequest:
      type: object
      required:
        - name
        - pairs
        - take_profit
        - take_profit_type
        - base_order_volume
        - safety_order_volume
        - martingale_volume_coefficient
        - martingale_step_coefficient
        - max_safety_orders
        - active_safety_orders_count
        - safety_order_step_percentage
        - strategy_list
      properties:
        account_id:
          type: integer
          description: "3Commas exchange account ID (if changing account)."
        name:
          type: string
          description: "DCA Bot name specified by the user."
        pairs:
          type: string
          description: "Trading pair(s) in 3Commas format."
        take_profit:
          type: number
          description: "Percentage value for the bot’s Take Profit. Set to 0 if using steps."
        take_profit_type:
          type: string
          enum:
            - base
            - total
          description: "Calculation basis for Take Profit."
        take_profit_steps:
          type: array
          items:
            $ref: '#/components/schemas/TakeProfitStep'
          description: "Optional multiple TP steps; if set, `take_profit` must be 0."
        base_order_volume_type:
          type: string
          enum:
            - quote_currency
            - base_currency
            - percent
        base_order_volume:
          type: number
        safety_order_volume_type:
          type: string
          enum:
            - quote_currency
            - base_currency
            - percent
        safety_order_volume:
          type: number
        safety_order_step_percentage:
          type: number
        martingale_volume_coefficient:
          type: number
          minimum: 0.1
          maximum: 10
        martingale_step_coefficient:
          type: number
          minimum: 0.1
          maximum: 10
        max_safety_orders:
          type: integer
          minimum: 0
          maximum: 200
        active_safety_orders_count:
          type: integer
        stop_loss_percentage:
          type: number
        sl_to_breakeven_enabled:
          type: boolean
          default: false
        sl_to_breakeven_data:
          type: object
          description: "JSON object defining breakeven trigger levels."
        cooldown:
          type: integer
          minimum: 0
          maximum: 2592000
        trailing_enabled:
          type: boolean
        trailing_deviation:
          type: number
        strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
        close_strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
        leverage_type:
          type: string
          enum:
            - cross
            - isolated
        leverage_custom_value:
          type: number
        stop_loss_timeout_enabled:
          type: boolean
          default: false
        stop_loss_timeout_in_seconds:
          type: integer
        tsl_enabled:
          type: boolean
        min_volume_btc_24h:
          type: number
        deal_start_delay_seconds:
          type: integer
        profit_currency:
          type: string
          enum:
            - base_currency
            - quote_currency
        start_order_type:
          type: string
          enum:
            - limit
            - market
        stop_loss_type:
          type: string
          enum:
            - stop_loss
            - stop_loss_and_disable_bot
        disable_after_deals_count:
          type: integer
        allowed_deals_on_same_pair:
          type: integer
        min_profit_type:
          type: string
          enum:
            - base_order_volume
            - total_bought_volume
        min_profit_percentage:
          type: number
        risk_reduction_percentage:
          type: number
        reinvesting_percentage:
          type: number
          minimum: 0
          maximum: 100
        min_price_percentage:
          type: number
          minimum: -95
          maximum: 1000
        max_price_percentage:
          type: number
          minimum: -95
          maximum: 1000
        close_deals_timeout:
          type: integer
          minimum: 60

    CreateBotRequest:
      type: object
      required:
        - account_id
        - pairs
        - base_order_volume_type
        - base_order_volume
        - strategy_list
        - take_profit_type
        - take_profit
        - risk_reduction_percentage
        - safety_order_step_percentage
        - safety_order_volume
        - max_safety_orders
        - active_safety_orders_count
        - martingale_volume_coefficient
        - martingale_step_coefficient
      properties:
        name:
          type: string
          description: User-defined name of the DCA Bot. If not specified, the system will generate a default name automatically.
          minLength: 1
          maxLength: 200
        account_id:
          type: integer
          description: ID of the exchange account entity where you want to create the DCA Bot.
        pairs:
          type: string
          description: |
            Trading pair(s) in 3Commas format. If a single pair is passed, a SingleBot is created.  
            If two or more pairs are passed, a MultiBot is created.
        max_active_deals:
          type: integer
          description: The maximum number of active deals available for this DCA Bot.
          minimum: 1
          maximum: 199
          default: 1
        strategy:
          type: string
          description: The type of trading strategy used by this DCA Bot.
          enum:
            - short
            - long
        profit_currency:
          type: string
          description: |
            Currency used for profit calculation: base_currency or quote_currency.
          enum:
            - base_currency
            - quote_currency
        base_order_volume_type:
          type: string
          description: The volume type of the base order.
          enum:
            - quote_currency
            - base_currency
            - percent
        base_order_volume:
          type: number
          description: The volume of the base order for this DCA Bot.
        start_order_type:
          type: string
          description: The start order type for this DCA Bot.
          enum:
            - limit
            - market
        strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
          description: Array of strategies specifically for opening deals.
        leverage_type:
          type: string
          description: Sets leverage settings for a futures account.
          enum:
            - cross
            - isolated
        leverage_custom_value:
          type: number
          description: Leverage value (exchange- and pair-dependent).
        trailing_enabled:
          type: boolean
          description: Enables trailing for Take Profit.
        trailing_deviation:
          type: number
          description: Percentage value of the trailing deviation.
        take_profit_type:
          type: string
          description: Basis for Take Profit calculation.
          enum:
            - base
            - total
        take_profit:
          type: number
          description: Percentage value for the bot’s Take Profit. Set to 0 if using steps.
        take_profit_steps:
          type: array
          items:
            $ref: '#/components/schemas/TakeProfitStep'
          description: |
            Take Profit steps (up to 4), each with:
            - amount_percentage  
            - profit_percentage
        close_strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
          description: Array of strategies used for closing deals.
        min_profit_type:
          type: string
          description: Basis for minimum profit calculation.
          enum:
            - base_order_volume
            - total_bought_volume
        min_profit_percentage:
          type: number
          description: Minimum profit percentage required to complete a deal.
        reinvesting_percentage:
          type: number
          description: Percentage of realized profit to reinvest in each new deal.
          minimum: 0
          maximum: 100
        stop_loss_percentage:
          type: number
          description: Percentage drop to trigger Stop Loss.
        stop_loss_type:
          type: string
          description: Action after Stop Loss closes a deal.
          enum:
            - stop_loss
            - stop_loss_and_disable_bot
        tsl_enabled:
          type: boolean
          description: Enables trailing for Stop Loss.
        sl_to_breakeven_enabled:
          type: boolean
          description: Enables the Move-to-Breakeven feature.
          default: false
        sl_to_breakeven_data:
          type: object
          description: |
            Configuration for breakeven trigger levels (0 = entry price, 1 = first TP step, etc.).
        stop_loss_timeout_enabled:
          type: boolean
          description: Enables Stop Loss timeout.
          default: false
        stop_loss_timeout_in_seconds:
          type: integer
          description: Timeout duration in seconds for Stop Loss.
        risk_reduction_percentage:
          type: number
          description: Percentage of losses to reduce base and safety orders proportionally.
        safety_order_step_percentage:
          type: number
          description: Price deviation (%) to open each safety order.
        safety_order_volume_type:
          type: string
          description: Volume type for safety orders.
          enum:
            - quote_currency
            - base_currency
            - percent
        safety_order_volume:
          type: number
          description: Volume of each safety order.
        safety_strategy_list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyConfig'
          description: Array of strategies for executing safety orders.
        max_safety_orders:
          type: integer
          description: Maximum total number of safety orders per deal.
          minimum: 0
          maximum: 200
        active_safety_orders_count:
          type: integer
          description: Number of safety orders the bot may place concurrently.
        martingale_volume_coefficient:
          type: number
          description: Multiplier for increasing safety order volume (Martingale).
          minimum: 0.1
          maximum: 10
        martingale_step_coefficient:
          type: number
          description: Multiplier for increasing safety order step (Martingale).
          minimum: 0.1
          maximum: 10
        min_volume_btc_24h:
          type: number
          description: Minimum 24h BTC volume required to open a deal.
        min_price:
          type: number
          description: Minimum price to open a new deal.
        max_price:
          type: number
          description: Maximum price to open a new deal.
        deal_start_delay_seconds:
          type: integer
          description: Delay before a new deal starts (seconds).
        cooldown:
          type: number
          description: Time after closing a deal before a new one can start (seconds).
          minimum: 0
          maximum: 2592000
        disable_after_deals_count:
          type: integer
          description: Number of deals after which the bot disables itself.
        allowed_deals_on_same_pair:
          type: integer
          description: Max concurrent deals on the same pair (MultiBot only).
        min_price_percentage:
          type: number
          description: Minimum entry price percentage (−95 to 1000).
          minimum: -95
          maximum: 1000
        max_price_percentage:
          type: number
          description: Maximum entry price percentage (−95 to 1000).
          minimum: -95
          maximum: 1000
        close_deals_timeout:
          type: integer
          description: Auto-close deals after this many seconds.
          minimum: 60

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Short error code
        error_description:
          type: string
          description: Human-readable error message
        error_attributes:
          type: object
          description: Validation errors keyed by field name
          additionalProperties:
            type: array
            items:
              type: string
    
    CopyBotRequest:
      type: object
      required:
        - name
        - secret
        - amount
      properties:
        name:
          type: string
          description: The name for the new DCA Bot specified by the user.
        secret:
          type: string
          description: A unique code used for copying this bot, retrieved from the url_secret parameter.
        amount:
          type: number
          description: Amount allocated for bot usage.
    CopyBotResponse:
      type: object
      properties:
        bot_id:
          type: number
          description: Unique 3Commas ID for the newly created DCA Bot.
        bot_required_amount:
          type: number
          description: The minimum amount of funds required to launch this bot.